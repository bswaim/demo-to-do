{"ast":null,"code":"var _jsxFileName = \"C:\\\\_projects\\\\to-do-demo\\\\src\\\\components\\\\atom\\\\ToggleSwitch.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleSwitch({\n  className = '',\n  onToggleChange = Function.prototype,\n  toggleOn\n}) {\n  const ariaLabel = toggleOn ? \"Turn on Light Mode\" : \"Turn on Dark Mode\";\n  const icon = toggleOn ? faSun : faMoon;\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: classNames(`switch ${className}`),\n    \"aria-label\": ariaLabel,\n    \"data-testid\": \"toggle-switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: e => onToggleChange(e.target.checked),\n      name: \"theme-selection-toggle\",\n      role: \"checkbox\",\n      checked: toggleOn,\n      \"data-testid\": \"toggle-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"slider round\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: icon,\n        className: \"mt-1.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = ToggleSwitch;\nToggleSwitch.propTypes = {\n  className: PropTypes.string,\n  onToggleChange: PropTypes.func.isRequired,\n  toggleOn: PropTypes.bool.isRequired\n};\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["React","PropTypes","FontAwesomeIcon","faMoon","faSun","classNames","jsxDEV","_jsxDEV","ToggleSwitch","className","onToggleChange","Function","prototype","toggleOn","ariaLabel","icon","children","type","onChange","e","target","checked","name","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","func","isRequired","bool","$RefreshReg$"],"sources":["C:/_projects/to-do-demo/src/components/atom/ToggleSwitch.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faMoon, faSun} from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\n\nfunction ToggleSwitch({\n    className = '',\n    onToggleChange = Function.prototype,\n    toggleOn\n}) {\n    const ariaLabel = toggleOn ? \"Turn on Light Mode\" : \"Turn on Dark Mode\";\n    const icon = toggleOn ? faSun : faMoon;\n\n    return (\n        <label\n            className={classNames(`switch ${className}`)}\n            aria-label={ariaLabel}\n            data-testid='toggle-switch'\n        >\n            <input\n                type=\"checkbox\"\n                onChange={(e) => onToggleChange(e.target.checked)}\n                name=\"theme-selection-toggle\"\n                role='checkbox'\n                checked={toggleOn}\n                data-testid='toggle-input'\n            />\n            <span className=\"slider round\">\n                <FontAwesomeIcon icon={icon} className='mt-1.5' />\n            </span>\n        </label>\n    );\n}\n\nToggleSwitch.propTypes = {\n    className: PropTypes.string,\n    onToggleChange: PropTypes.func.isRequired,\n    toggleOn: PropTypes.bool.isRequired\n};\n\nexport default ToggleSwitch;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAAQC,MAAM,EAAEC,KAAK,QAAO,mCAAmC;AAC/D,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,YAAYA,CAAC;EAClBC,SAAS,GAAG,EAAE;EACdC,cAAc,GAAGC,QAAQ,CAACC,SAAS;EACnCC;AACJ,CAAC,EAAE;EACC,MAAMC,SAAS,GAAGD,QAAQ,GAAG,oBAAoB,GAAG,mBAAmB;EACvE,MAAME,IAAI,GAAGF,QAAQ,GAAGT,KAAK,GAAGD,MAAM;EAEtC,oBACII,OAAA;IACIE,SAAS,EAAEJ,UAAU,CAAE,UAASI,SAAU,EAAC,CAAE;IAC7C,cAAYK,SAAU;IACtB,eAAY,eAAe;IAAAE,QAAA,gBAE3BT,OAAA;MACIU,IAAI,EAAC,UAAU;MACfC,QAAQ,EAAGC,CAAC,IAAKT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,OAAO,CAAE;MAClDC,IAAI,EAAC,wBAAwB;MAC7BC,IAAI,EAAC,UAAU;MACfF,OAAO,EAAER,QAAS;MAClB,eAAY;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFpB,OAAA;MAAME,SAAS,EAAC,cAAc;MAAAO,QAAA,eAC1BT,OAAA,CAACL,eAAe;QAACa,IAAI,EAAEA,IAAK;QAACN,SAAS,EAAC;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEhB;AAACC,EAAA,GA3BQpB,YAAY;AA6BrBA,YAAY,CAACqB,SAAS,GAAG;EACrBpB,SAAS,EAAER,SAAS,CAAC6B,MAAM;EAC3BpB,cAAc,EAAET,SAAS,CAAC8B,IAAI,CAACC,UAAU;EACzCnB,QAAQ,EAAEZ,SAAS,CAACgC,IAAI,CAACD;AAC7B,CAAC;AAED,eAAexB,YAAY;AAAC,IAAAoB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}