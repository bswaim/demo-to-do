{"ast":null,"code":"import React,{useState}from'react';import AddListItem from\"../atom/AddListItem\";import{addNewItemToList,moveCurrentState,removeCheckedItems,updateLatestChangeToDoHistory}from\"../../utils/utils\";import CheckListSection from\"../molecule/CheckListSection\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faCheckDouble,faRotateLeft,faRotateRight,faTrash,faTrashAlt}from\"@fortawesome/free-solid-svg-icons\";import{find}from\"lodash\";import{v4 as uuidv4}from\"uuid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ToDoApp(){var _find,_listHistoryState$,_listHistoryState;const initialList=[{text:'clean dishes',checked:false,editMode:false,id:uuidv4()},{text:'Pet the cat',checked:true,editMode:false,id:uuidv4()}];const[listHistoryState,setListHistoryState]=useState([{isCurrent:true,list:initialList,isInEditMode:false}]);const currentListView=((_find=find(listHistoryState,x=>x.isCurrent))===null||_find===void 0?void 0:_find.list)||[];const undoEnabledLogic=!((_listHistoryState$=listHistoryState[0])!==null&&_listHistoryState$!==void 0&&_listHistoryState$.isCurrent);// if first item in list is not current view\nconst redoEnabledLogic=!((_listHistoryState=listHistoryState[listHistoryState.length-1])!==null&&_listHistoryState!==void 0&&_listHistoryState.isCurrent);// if last item in list's isCurrent prop is NOT true\nconst deleteAllItems=()=>{const updateCurrentState=updateLatestChangeToDoHistory([],listHistoryState);setListHistoryState([...updateCurrentState]);};const deleteCompletedItems=()=>{const updatedArray=removeCheckedItems([...currentListView]);const updateCurrentState=updateLatestChangeToDoHistory(updatedArray,listHistoryState);setListHistoryState([...updateCurrentState]);};const moveUpOrDownHistoryListState=undo=>{const updateCurrentState=moveCurrentState(listHistoryState,undo);setListHistoryState([...updateCurrentState]);};// todo: add a way to mark all completed\n// const markAllCompleted = (list) => {\n//     const updatedArray = checkAllItems(listHistoryState);\n//     const updateCurrentState = updateLatestChangeToDoHistory(updatedArray, listHistoryState);\n//     setListHistoryState([...updateCurrentState]);\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{id:\"todo-id\",\"data-testid\":\"todo-id\",className:\"todo-container bg-primary-bg w-full rounded-2xl border-2 border-solid border-black p-4\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"text-center text-xl border-b-2 border-b-primary border-solid pb-2 pl-4 flex justify-between\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"To-Do App\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"aria-description\":\"delete all list items\",\"data-testid\":\"delete-all-icon\",id:\"delete-all-icon\",name:\"delete-all-icon\",onClick:()=>deleteAllItems(),value:\"delete list\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrash,className:\"text-delete-color\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsx(CheckListSection,{listHistoryState:listHistoryState,setListHistoryState:e=>setListHistoryState([...e])// need to update list\n})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-left\",children:/*#__PURE__*/_jsx(AddListItem,{onClicked:()=>{const updatedArray=addNewItemToList(currentListView);const updatedListHistory=updateLatestChangeToDoHistory(updatedArray,listHistoryState,true);setListHistoryState([...updatedListHistory]);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-2 border-b-2 border-b-primary border-dashed mb-4\"}),/*#__PURE__*/_jsxs(\"h2\",{className:\"text-left ml-6 flex justify-between\",children:[\"COMPLETED\",/*#__PURE__*/_jsxs(\"button\",{\"aria-description\":\"delete all completed list items\",id:\"delete-all-checked-icon\",name:\"delete-all-checked-icon\",\"data-testid\":\"delete-all-checked-icon\",onClick:()=>deleteCompletedItems(),type:\"button\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrashAlt,className:\"text-delete-color\"}),/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCheckDouble,className:\"text-delete-color ml-1\"})]})]}),/*#__PURE__*/_jsx(CheckListSection,{groupedByUnChecked:true,listHistoryState:listHistoryState,setListHistoryState:e=>setListHistoryState([...e])}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between px-4 mt-8 text-2xl bg-white rounded-b-lg\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"undo\",name:\"undo\",className:undoEnabledLogic?'cursor-pointer':'cursor-default',onClick:()=>moveUpOrDownHistoryListState(true),\"data-testid\":\"undo-icon\",disabled:!undoEnabledLogic,type:\"button\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faRotateLeft,className:undoEnabledLogic?'text-secondary-text':'text-gray-500'})}),/*#__PURE__*/_jsx(\"button\",{id:\"redo\",name:\"redo\",className:redoEnabledLogic?'cursor-pointer':'cursor-default',onClick:()=>moveUpOrDownHistoryListState(false),\"data-testid\":\"redo-icon\",disabled:!redoEnabledLogic,type:\"button\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faRotateRight,className:redoEnabledLogic?'text-secondary-text':'text-gray-500'})})]})]});}export default ToDoApp;","map":{"version":3,"names":["React","useState","AddListItem","addNewItemToList","moveCurrentState","removeCheckedItems","updateLatestChangeToDoHistory","CheckListSection","FontAwesomeIcon","faCheckDouble","faRotateLeft","faRotateRight","faTrash","faTrashAlt","find","v4","uuidv4","jsx","_jsx","jsxs","_jsxs","ToDoApp","_find","_listHistoryState$","_listHistoryState","initialList","text","checked","editMode","id","listHistoryState","setListHistoryState","isCurrent","list","isInEditMode","currentListView","x","undoEnabledLogic","redoEnabledLogic","length","deleteAllItems","updateCurrentState","deleteCompletedItems","updatedArray","moveUpOrDownHistoryListState","undo","className","children","type","name","onClick","value","icon","e","onClicked","updatedListHistory","groupedByUnChecked","disabled"],"sources":["C:/_projects/to-do-demo/src/components/organism/ToDoApp.js"],"sourcesContent":["import React, {useState} from 'react';\nimport AddListItem from \"../atom/AddListItem\";\nimport {\n    addNewItemToList,\n    moveCurrentState,\n    removeCheckedItems, updateLatestChangeToDoHistory\n} from \"../../utils/utils\";\nimport CheckListSection from \"../molecule/CheckListSection\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n    faCheckDouble,\n    faRotateLeft,\n    faRotateRight,\n    faTrash,\n    faTrashAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {find} from \"lodash\";\nimport {v4 as uuidv4} from \"uuid\";\n\nfunction ToDoApp() {\n    const initialList = [\n        {text: 'clean dishes', checked: false, editMode: false, id: uuidv4()},\n        {text: 'Pet the cat', checked: true, editMode: false, id: uuidv4()}\n    ]\n    const [listHistoryState, setListHistoryState] = useState([{isCurrent: true, list: initialList, isInEditMode: false}]);\n    const currentListView = find(listHistoryState, x => x.isCurrent)?.list || [];\n    const undoEnabledLogic = !(listHistoryState[0]?.isCurrent); // if first item in list is not current view\n    const redoEnabledLogic = !(listHistoryState[listHistoryState.length -1]?.isCurrent); // if last item in list's isCurrent prop is NOT true\n\n    const deleteAllItems = () => {\n        const updateCurrentState = updateLatestChangeToDoHistory([], listHistoryState);\n        setListHistoryState([...updateCurrentState])\n    }\n    const deleteCompletedItems = () => {\n        const updatedArray = removeCheckedItems([...currentListView]);\n        const updateCurrentState = updateLatestChangeToDoHistory(updatedArray, listHistoryState);\n        setListHistoryState([...updateCurrentState])\n    }\n    const moveUpOrDownHistoryListState = (undo) => {\n        const updateCurrentState = moveCurrentState(listHistoryState, undo);\n        setListHistoryState([...updateCurrentState]);\n    }\n\n    // todo: add a way to mark all completed\n    // const markAllCompleted = (list) => {\n    //     const updatedArray = checkAllItems(listHistoryState);\n    //     const updateCurrentState = updateLatestChangeToDoHistory(updatedArray, listHistoryState);\n    //     setListHistoryState([...updateCurrentState]);\n    // }\n\n    return (\n        <div\n            id='todo-id'\n            data-testid='todo-id'\n            className='todo-container bg-primary-bg w-full rounded-2xl border-2 border-solid border-black p-4'\n        >\n            <h1 className='text-center text-xl border-b-2 border-b-primary border-solid pb-2 pl-4 flex justify-between'>\n                <div>To-Do App</div>\n                {/* DELETE ALL ITEMS BUTTON */}\n                <button\n                    type='button'\n                    aria-description='delete all list items'\n                    data-testid='delete-all-icon'\n                    id='delete-all-icon'\n                    name='delete-all-icon'\n                    onClick={() => deleteAllItems()}\n                    value='delete list'\n                >\n                    <FontAwesomeIcon icon={faTrash} className='text-delete-color'/>\n                </button>\n            </h1>\n            {/* TO DO ITEMS START */}\n            <div className='mt-4'>\n                <CheckListSection\n                    listHistoryState={listHistoryState}\n                    setListHistoryState={(e) => setListHistoryState([...e])} // need to update list\n                />\n            </div>\n            <div className='text-left'>\n                <AddListItem onClicked={() => {\n                    const updatedArray = addNewItemToList(currentListView);\n                    const updatedListHistory = updateLatestChangeToDoHistory(updatedArray, listHistoryState, true);\n                    setListHistoryState([...updatedListHistory]);\n                }}/>\n            </div>\n\n            {/* SEPARATOR */}\n            <div className='w-full h-2 border-b-2 border-b-primary border-dashed mb-4'/>\n\n            {/* COMPLETED SECTION START */}\n            <h2 className='text-left ml-6 flex justify-between'>\n                COMPLETED\n                <button\n                    aria-description='delete all completed list items'\n                    id='delete-all-checked-icon'\n                    name='delete-all-checked-icon'\n                    data-testid='delete-all-checked-icon'\n                    onClick={() => deleteCompletedItems()}\n                    type='button'\n                >\n                    <FontAwesomeIcon icon={faTrashAlt} className='text-delete-color'/>\n                    <FontAwesomeIcon icon={faCheckDouble} className='text-delete-color ml-1'/>\n                </button>\n            </h2>\n            <CheckListSection\n                groupedByUnChecked\n                listHistoryState={listHistoryState}\n                setListHistoryState={(e) => setListHistoryState([...e])}\n            />\n\n            {/* UNDO AND REDO BUTTONS */}\n            <div className='flex justify-between px-4 mt-8 text-2xl bg-white rounded-b-lg'>\n                <button\n                    id='undo'\n                    name='undo'\n                    className={undoEnabledLogic ? 'cursor-pointer' : 'cursor-default'}\n                    onClick={() => moveUpOrDownHistoryListState(true)}\n                    data-testid='undo-icon'\n                    disabled={!undoEnabledLogic}\n                    type='button'\n                >\n                    <FontAwesomeIcon icon={faRotateLeft} className={undoEnabledLogic ? 'text-secondary-text' : 'text-gray-500'}/>\n                </button>\n                <button\n                    id='redo'\n                    name='redo'\n                    className={redoEnabledLogic ? 'cursor-pointer' : 'cursor-default'}\n                    onClick={() => moveUpOrDownHistoryListState(false)}\n                    data-testid='redo-icon'\n                    disabled={!redoEnabledLogic}\n                    type='button'\n                >\n                    <FontAwesomeIcon icon={faRotateRight} className={redoEnabledLogic ? 'text-secondary-text' : 'text-gray-500'}/>\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default ToDoApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}